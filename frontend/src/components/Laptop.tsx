import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF, useVideoTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { ProjectsInfos } from '../constants/Globals/types';
import { GroupProps } from '@react-three/fiber';
import { gsap } from 'gsap';
// Define the GLTFResult type for the loaded model
interface GLTFResult extends GLTF {
    nodes: {
      Cube008: THREE.Mesh;
      Cube008_1: THREE.Mesh;
      Cube008_2: THREE.Mesh;
      keyboard: THREE.Mesh;
      Cube002: THREE.Mesh;
      Cube002_1: THREE.Mesh;
      touchbar: THREE.Mesh;
      monitor_screen: THREE.Mesh
    };
    materials: {
      aluminium: THREE.Material;
      'matte.001': THREE.Material;
      keys: THREE.Material;
      trackpad: THREE.Material;
      touchbar: THREE.Material;
    };
  }

  interface LaptopProps extends GroupProps {
    currentProject : ProjectsInfos;
    index: number;
  }
function Laptop({currentProject,index, ...props}: LaptopProps)  {
  const group = useRef<THREE.Group | null>(null);
  const groupScreenRef = useRef<THREE.Group | null>(null);
  const txt = useVideoTexture(currentProject.projectDirection)

  // Load model
  const { nodes, materials } = useGLTF('/models/mac-draco.glb') as GLTFResult
  //Open Laptop Anim
  const anim = ()=>{
    if(groupScreenRef.current){
      gsap.to(groupScreenRef.current.position, {
        x: 0,
        y: 1.16,
        z: 4.2,
        duration: 2,
        ease: 'power1.inOut',
      })
      gsap.to(groupScreenRef.current.rotation,{
        x: Math.PI / 2,
        y: 0,
        z: 0,
        duration: 2,
        ease: 'power1.inOut',
      })
  
    }
  }
  
 

  // The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation-x={-0.425} position={[0, -0.04, -4.41]}>
        <group ref={groupScreenRef} position={[0, -1.76, 7.2]} rotation={[Math.PI , 0, 0]}>
          <mesh material={materials.aluminium} geometry={nodes['Cube008'].geometry} />
          <mesh material={materials['matte.001']} geometry={nodes['Cube008_1'].geometry} />
          <mesh geometry={nodes['Cube008_2'].geometry}
          position={[0, 0, 0]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={[8.27, 6.1, 1]}
          >
           
            <planeGeometry args={[1,1]}/>
            <meshBasicMaterial map={txt}/>
          </mesh>
        </group>
      </group>
      <mesh material={materials.keys} geometry={nodes.keyboard.geometry} position={[1.79, 0, 3.45]} />
      <group position={[0, -0.1, 3.39]}>
        <mesh material={materials.aluminium} geometry={nodes['Cube002'].geometry} />
        <mesh material={materials.trackpad} geometry={nodes['Cube002_1'].geometry} />
      </group>
      <mesh material={materials.touchbar} geometry={nodes.touchbar.geometry} position={[0, -0.03, 1.2]} />
    </group>
  )
}

export default Laptop;