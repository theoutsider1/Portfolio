/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Randall_3D (https://sketchfab.com/Randall_3D)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/crystal-ball-30618a3f909a4376af013a1d1de1cbba
Title: Crystal Ball
*/

import * as THREE from 'three'
// import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
    Object_3: THREE.Mesh
    Object_4: THREE.Mesh
    Object_5: THREE.Mesh
    Object_6: THREE.Mesh
    Object_7: THREE.Mesh
  }
  materials: {
    phong1SG: THREE.MeshPhysicalMaterial
    blinn1SG: THREE.MeshStandardMaterial
    blinn2SG: THREE.MeshStandardMaterial
  }
}

export function CrystalBall(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/crystal_ball.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_2.geometry}
          material={materials.phong1SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_3.geometry}
          material={materials.blinn1SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_4.geometry}
          material={materials.blinn1SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_5.geometry}
          material={materials.blinn1SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_6.geometry}
          material={materials.blinn1SG}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Object_7.geometry}
          material={materials.blinn2SG}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/crystal_ball.glb')
