/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: James Allison (https://sketchfab.com/JamesA)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/the-elder-wand-efc7362a857749b3ae55fcbbba8baafb
Title: The Elder Wand
*/

// import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger';
import {RefObject, useEffect, useRef } from 'react'
import { Group, Mesh } from 'three'


interface handletri {
  handleTriggerIcons: () => void;
  castShadow: boolean;
  position: [number, number, number];
  rotation: [number, number, number];
  scale?: number;
  testRef : RefObject<HTMLDivElement>;
}
gsap.registerPlugin(ScrollTrigger)

const MagicWand = (props : handletri)=> {
 
  const { nodes, materials } = useGLTF('/models/the_elder_wand.glb')
  const {handleTriggerIcons, testRef, ...restProps} = props;
  const animationStarted = useRef(false);
  const meshRef = useRef<Group>(null);
  
  // 1st Animation
  const flyWand = () => {
    
    if(meshRef.current ){
      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: testRef.current,
          start: "top center",
          end: "bottom bottom",
          scrub: true,
          markers: true,
        },
      })
      tl.to(meshRef.current.position, {
        x: 1,       // Move to a new x position
        y: 0.5,    // Move to a new y position (upwards arc)
        duration: 1,
        ease: "power1.inOut",
        onComplete:()=> {
          shakeWand()},  // Call the flip function after moving
      })
      
    }
  };

// 2nd Animation
  const shakeWand = ()=> {
    if(meshRef.current){
      gsap
      .timeline()
      .to(meshRef.current.rotation,{
        // x:-0.1,
        y: 0.5,
        duration: 0.1,
        ease:"power1.inOut"
      }).to(meshRef.current.rotation,{
        // x:-0.1,
        y:1.8,
        duration:3,
        ease:"power1.inOut",
        onComplete: handleTriggerIcons ,
      })
    }
  }

// handle All animations 
  const handleAnimations = ()=>{
    if(meshRef.current){
      gsap.to(meshRef.current.position,{
        x:meshRef.current.position.x,
        y: 1,
        duration:2,
        onComplete: flyWand,
      })
     
    }
  }
  useEffect(() => {
    // If condition to make sure handleAnimations runs 1 time only
    if (!animationStarted.current ) {
      animationStarted.current = true;
      handleAnimations();
    }
  }, [handleTriggerIcons]);
  
   return (
    <group {...restProps}
     ref={meshRef} 
     dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.07}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Cylinder__0 as Mesh ).geometry}
            material={materials['Scene_-_Root']}
            rotation={[-Math.PI / 2, 0, 0]}
            scale={100}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/the_elder_wand.glb')
export default MagicWand;