/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: James Allison (https://sketchfab.com/JamesA)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/the-elder-wand-efc7362a857749b3ae55fcbbba8baafb
Title: The Elder Wand
*/
import { useGLTF } from '@react-three/drei'
import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger';
import {RefObject, useEffect, useRef } from 'react'
import { Group, Mesh } from 'three'



interface handletri {
  castShadow: boolean;
  position: [number, number, number];
  rotation: [number, number, number];
  scale?: number | [number, number, number];
  testRef? : RefObject<HTMLDivElement>;
}
gsap.registerPlugin(ScrollTrigger)

const MagicWand = (props : handletri)=> {
 
  const { nodes, materials } = useGLTF('/models/the_elder_wand.glb')
  const {testRef,scale, ...restProps} = props;
  const meshRef = useRef<Group>(null);
  const scaleValue: number = typeof scale === 'number' ? scale : 1;

  
  useEffect(() => {
    if(testRef?.current){
      console.log('true');
      
    if(meshRef.current ){
      const tl = gsap.timeline({
        scrollTrigger: {
          trigger: testRef.current,
          start: "top center",
          end: "center center",
          scrub: true,
          markers: false,
        },
      })

      
      tl.to(meshRef.current.position, {
        x: 0,       // Move to a new x position
        y: 0,       // Move to a new y position 
        z: 0.5,     // Move to a new z position 
        duration: 1,
        ease: "power1.inOut",})
      tl.to(meshRef.current.scale, {
        x: scaleValue,       // Move to a new x scale
        y: scaleValue,       // Move to a new y scale
        z: scaleValue,       // Move to a new z scale
        duration: 1,
        ease: "power1.inOut",
         },0)
      tl.to(meshRef.current.rotation, {
        x: 0.5,       // Move to a new x position
        y: 0,         // Move to a new x position
        z: 0,         // Move to a new z position 
        duration: 1,
        ease: "power1.inOut",
       },0)
      return (()=>{
        tl.kill()
      })
    }
    }
  }, [testRef]);
  
   return (
    <group {...restProps}
     ref={meshRef} 
     scale={scaleValue}
     dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            castShadow
            receiveShadow
            geometry={(nodes.Cylinder__0 as Mesh ).geometry}
            material={materials['Scene_-_Root']}
            rotation={[-Math.PI / 2, 0, 0]}
            
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/the_elder_wand.glb')
export default MagicWand;